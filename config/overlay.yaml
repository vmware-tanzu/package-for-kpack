#! Copyright 2021 VMware, Inc.
#! SPDX-License-Identifier: Apache-2.0

#@ load("@ytt:overlay", "overlay")

#@overlay/match by=overlay.subset({"metadata":{"name":"kpack-controller"}, "kind": "Deployment"})
---
spec:
  template:
    spec:
      #@overlay/match missing_ok=True
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
        #@overlay/match by="name"
        - name: controller
          #@overlay/match missing_ok=True
          securityContext:
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault

#@overlay/match by=overlay.subset({"metadata":{"name":"kpack-webhook"}, "kind": "Deployment"})
---
spec:
  template:
    spec:
      #@overlay/match missing_ok=True
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
        #@overlay/match by="name"
        - name: webhook
          #@overlay/match missing_ok=True
          securityContext:
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault

#@overlay/match by=overlay.subset({"kind": "ClusterRoleBinding"}), expects="1+"
---
metadata:
  #@overlay/match missing_ok=True
  annotations:
    kapp.k14s.io/update-strategy: fallback-on-replace

#@overlay/match by=overlay.subset({"kind": "RoleBinding"}), expects="1+"
---
metadata:
  #@overlay/match missing_ok=True
  annotations:
    kapp.k14s.io/update-strategy: fallback-on-replace

#! Eliminates carvel phantom diffs in AKS:
#@ mutating_webhook = overlay.subset({"apiVersion": "admissionregistration.k8s.io/v1", "kind": "MutatingWebhookConfiguration"})
#@ validating_webhook = overlay.subset({"apiVersion": "admissionregistration.k8s.io/v1", "kind": "ValidatingWebhookConfiguration"})

#@overlay/match by=overlay.or_op(mutating_webhook,validating_webhook), expects="0+"
---
metadata:
  #@overlay/match missing_ok=True
  annotations:
    #@overlay/match missing_ok=True
    admissions.enforcer/disabled: "true"
